Express 應用程式產生器
==================================================
使用下列指令來安裝 express：
$ npm install express-generator -g

舉例來說，以下是在現行工作目錄中建立一個名為 "myapp" 的 Express 應用程式：
express --view=pug myapp



使用 -h 選項來顯示指令選項：
==================================================
$ express -h

  Usage: express [options][dir]

  Options:

    -h, --help          output usage information
        --version       output the version number
    -e, --ejs           add ejs engine support
        --hbs           add handlebars engine support
        --pug           add pug engine support
    -H, --hogan         add hogan.js engine support
        --no-view       generate without view engine
    -v, --view &lt;engine&gt; add view &lt;engine&gt; support (ejs|hbs|hjs|jade|pug|twig|vash) (defaults to jade)
    -c, --css &lt;engine&gt;  add stylesheet &lt;engine&gt; support (less|stylus|compass|sass) (defaults to plain css)
        --git           add .gitignore
    -f, --force         force on non-empty directory




Administrator的權限
==================================================
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned

Restricted：
Does not load configuration files or run scripts. Restricted is the default execution policy.
AllSigned：
Requires that all scripts and configuration files be signed by a trusted publisher, including scripts that you write on the local computer.
RemoteSigned：
Requires that all scripts and configuration files downloaded from the Internet be signed by a trusted publisher.
Unrestricted：
Loads all configuration files and runs all scripts. If you run an unsigned script that was downloaded from the Internet, you are prompted for permission before it runs.
Bypass：
Nothing is blocked and there are no warnings or prompts.
Undefined：
Removes the currently assigned execution policy from the current scope. This parameter will not remove an execution policy that is set in a Group Policy scope.




& npm start
==================================================
瀏覽器中載入 http://localhost:3000/，以存取應用程式。產生的應用程式具有如下的目錄結構：
.
├── app.js
├── bin
│   └── www
├── package.json
├── public
│   ├── images
│   ├── javascripts
│   └── stylesheets
│       └── style.css
├── routes
│   ├── index.js
│   └── users.js
└── views
    ├── error.pug
    ├── index.pug
    └── layout.pug

7 directories, 9 files




PUG
==================================================
PUG to HTML 
pug 為 html 模板語言，可支援撰寫 JS 邏輯。
https://codebeautify.org/pug-to-html-converter

PUG入門文件
https://pugjs.org/api/getting-started.html


pug-cli
==================================================
安裝 
npm install pug-cli -g

#watchout
pug -w ./ -o ./html -P

Options
-h, --help             output usage information
-V, --version          output the version number
-O, --obj <str|path>   JSON/JavaScript options object or file
-o, --out <dir>        output the rendered HTML or compiled JavaScript to <dir>
-p, --path <path>      filename used to resolve includes
-P, --pretty           compile pretty HTML output
-c, --client           compile function for client-side runtime.js
-n, --name <str>       the name of the compiled template (requires --client)
-D, --no-debug         compile without debugging (smaller functions)
-w, --watch            watch files for changes and automatically re-render
-E, --extension <ext>  specify the output file extension
-s, --silent           do not output logs
--name-after-file      name the template after the last section of the file path (requires --client and overriden by --name)
--doctype <str>        specify the doctype on the command line (useful if it is not specified by the template)

